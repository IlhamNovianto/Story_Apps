UNIT TEST
# AddStoryViewModelTest cek
    -> `get token success`()
        - Memastikan actualToken tidak Kosong
        - Memastikan Token dummyToken sama dengan ActualToken

    ->  `when add story is called Should Not Null and Return Success`()
  	    - Memastikan Object ActualResponse tidak kosong/null
	    - Memastikan response ActualResponse sama dengan Result.Succses,
	    - Memastikan Variable Data Upload sesuai

	->  `when add story field Should Return Error`()
	    - ActualResponse dan Result.Error sama.
	    - Result.Error bernilai True
	    - Memastikan result.error dengan actualResponse sama

# LoginViewModelTest Cek
    -> `when set token funtion call true`()
        - Memastikan LoginResult memiliki token
        - jika ya, maka akan memanggil funtion yang akan memverivikasi token dan state

	-> `when get token not null`()
        - memastikan actualToken tidak Kosong
        - Nilai Token dummyToken sama dengan ActualToken

	-> `when login() is Called Should Return Success and Data`
	    - Memastikan bahwa actualResponse tidak kosong,
	    - actualRespon sama dengan Result.Success,
	    - dummyResponse sama dengan actualResponse,

	-> `when Network Error Should Return Error`()
	    - Result Response.Error bernilai true, menampilkan String "error"
	    - Memastikan bahwa actualResponse tidak kosong,
	    - actualResponse dan ResultResponse.Error sama

* ListStoryViewModelTest cek
    -> `set logout success`()
         - Memverivikasi funtion logout() dipanggil

	-> `get session login success`()
    	- Ketika berhasil LoginSession bernilai true,
	    - Memastikan bahwa datastore tidak null.
	    - Hasil dummysession dan ActualIslogin sama

	-> `getToken() success`()
	    - Ketika berhasil mendapatkan String Token,
	    - Memastikan bahwa dataStore tidak null.
	    - Hasil dummyToken dan ActualToken sama.

	-> `when Get Story Should Not Null`()
	    - Ketika fungsi getStories() dipanggil maka mengembalikan data(Paging<Data>)
	    - Memastikan data Tidak Bernilai Null.
	    - Data DummyStory dan Differ.snapshot() sama, untuk Memastikan mengembalikan Story response yang benar
	    - dummyStory.size dan differ.snapshot().size Sama, untuk Memastikan jumlah data sesuai dengan yang diharapkan.
	    - dummyStory[0].name dan differ.snapshot()[0]?.name Sama, untuk Memastikan nilai Value sesuai dengan variablenya.

* MapsViewModelTest cek
	-> `when get Stories is Called Should Not Null and Return Success`()
	    - Result.Success bernilai true,
	    - Memastikan bahwa actualStory tidak kosong,
	    - ActualStory dan Result.Success sama,
	    - Memastikan data(actualStory) mengembalikan data sama dengan data dummyMaps sama

	-> `when Network Error Should Return Error`()
	    - Ketika gagal mendapatkan data story map,
	    - Result.Error bernilai false dan menampilakn pesan error,
	    - memastikan bahwa actualStory tidak kosong, menampilkan pesan error
	    - actualStory dan Result.Error memiliki value yang sama, yaitu pesan error

	-> `getToken success`()
	    - Ketika berhasil mendapatkan String Token,
	    - Memastikan bahwa dataStore tidak null.
	    - Hasil dummyToken dan ActualToken sama.

* RegisterViewModelTest
	-> `when register() is Called Should Not Null and Return Success`()
	    - Ketika berhasil melakukan register
	    - Result.Success bernilai true,
	    - Memastikan bahwa actualResponse tidak kosong,
	    - actualResponse dan Result.Success sama,
	    - Memastikan bahwa data dummyRespon dan data actualResponse sama

	-> `when Network Error Should Return Error`()
	    - Ketika gagal melakukan register
	    - Result.Error bernilai false, dan menampilkan pesan error,
	    - Memastikan bahwa actualResponse tidak kosong, berisi pesan error,
	    - actualResponse dan Result.Error